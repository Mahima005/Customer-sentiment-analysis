{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "43935cc6-09c7-460a-b8c2-0c047eb99708",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from selenium import webdriver\n",
    "from bs4 import BeautifulSoup\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "import time\n",
    "from textblob import TextBlob\n",
    "from nltk import sent_tokenize\n",
    "import requests\n",
    "driver = webdriver.Chrome()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8677ac44-eec9-46b5-90b5-d0f2b72a74e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Navigated to page 2, Collected reviews: 10\n",
      "Navigated to page 3, Collected reviews: 20\n",
      "Navigated to page 4, Collected reviews: 30\n",
      "Navigated to page 5, Collected reviews: 40\n",
      "Navigated to page 6, Collected reviews: 50\n",
      "Navigated to page 7, Collected reviews: 60\n",
      "Navigated to page 8, Collected reviews: 70\n",
      "Navigated to page 9, Collected reviews: 80\n",
      "Navigated to page 10, Collected reviews: 90\n",
      "Collected 100 reviews. Stopping...\n",
      "         Customer Name Rating  \\\n",
      "0               Ajin V      5   \n",
      "1    Flipkart Customer      5   \n",
      "2           Talim (sk)      5   \n",
      "3      Saurabh Gothwad      5   \n",
      "4   Arunji Govindaraju      5   \n",
      "..                 ...    ...   \n",
      "95      Ashwani Mishra      5   \n",
      "96           Dev Sarda      5   \n",
      "97         Naresh Soni      5   \n",
      "98      Sudipto Sarkar      5   \n",
      "99       ABDUR RAHMAN       5   \n",
      "\n",
      "                                               Review  \n",
      "0                       High quality cameraüòçREAD MORE  \n",
      "1   Awesome photography experience. Battery backup...  \n",
      "2   I love this phone. The camera is amazing: its ...  \n",
      "3                            Simply premium.READ MORE  \n",
      "4   Awesome product very happy to hold this. Bette...  \n",
      "..                                                ...  \n",
      "95  The iPhone 15 features a 48-megapixel main cam...  \n",
      "96                  The best one from appleüíôREAD MORE  \n",
      "97                                 Very goodREAD MORE  \n",
      "98  What a phone super performance with light weig...  \n",
      "99  First time experiencing I phone. It feels prem...  \n",
      "\n",
      "[100 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import time\n",
    "from nltk import sent_tokenize\n",
    "# Initialize WebDriver\n",
    "browser = webdriver.Chrome()\n",
    "\n",
    "# Open Flipkart product reviews URL (direct link to the reviews page)\n",
    "base_url = \"\"\"https://www.flipkart.com/apple-15-blue-128-gb/product-reviews/itmbf14ef54f645d?pid=MOBGTAGPAQNVFZZY&lid=LSTMOBGTAGPAQNVFZZYCQQXYH&marketplace=FLIPKART\"\"\"\n",
    "browser.get(base_url)\n",
    "\n",
    "# Lists to store data\n",
    "name = []\n",
    "review = []\n",
    "rating = []\n",
    "\n",
    "# Function to extract data from a page\n",
    "def extract_data():\n",
    "    soup = BeautifulSoup(browser.page_source, \"html.parser\")\n",
    "    Names = soup.find_all(\"p\", {\"class\": \"_2NsDsF AwS1CA\"})\n",
    "    Ratings = soup.find_all(\"div\", {\"class\": \"XQDdHH Ga3i8K\"})\n",
    "    Reviews = soup.find_all(\"div\", {\"class\": \"ZmyHeo\"})\n",
    "\n",
    "    # Store data in lists\n",
    "    for n, r, rv in zip(Names, Ratings, Reviews):\n",
    "        name.append(n.text)\n",
    "        rating.append(r.text)\n",
    "        review.append(rv.text)\n",
    "\n",
    "# Collect data from multiple pages\n",
    "page_number = 1\n",
    "while len(name) < 100:\n",
    "    time.sleep(2)  # Allow the page to load\n",
    "    extract_data()\n",
    "\n",
    "    # Check if data length has reached the required number\n",
    "    if len(name) >= 100:\n",
    "        print(\"Collected 100 reviews. Stopping...\")\n",
    "        break\n",
    "\n",
    "    # Increment the page number and load the new page\n",
    "    page_number += 1\n",
    "    next_page_url = f\"{base_url}&page={page_number}\"\n",
    "    \n",
    "    try:\n",
    "        # Open the next page\n",
    "        browser.get(next_page_url)\n",
    "        print(f\"Navigated to page {page_number}, Collected reviews: {len(name)}\")\n",
    "    except Exception as e:\n",
    "        print(\"Error navigating to the next page:\", str(e))\n",
    "        break\n",
    "\n",
    "# Truncate lists to ensure equal length (in case of any mismatch)\n",
    "#min_length = min(len(name), len(review), len(rating))\n",
    "#name = name[:min_length]\n",
    "#review = review[:min_length]\n",
    "#rating = rating[:min_length]\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame({\"Customer Name\": name, \"Rating\": rating, \"Review\": review})\n",
    "print(df)\n",
    "# Save to CSV\n",
    "#df.to_csv(\"flipkart_reviews.csv\", index=False)\n",
    "#print(f\"Total Reviews Collected: {len(name)}\")\n",
    "#print(\"Data saved to flipkart_reviews.csv\")\n",
    "\n",
    "browser.quit()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8427d414-baaa-4c92-9bdc-dd77fb50b9a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Review</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ajin V</td>\n",
       "      <td>5</td>\n",
       "      <td>High quality cameraüòç</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Flipkart Customer</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome photography experience. Battery backup...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Talim (Sk)</td>\n",
       "      <td>5</td>\n",
       "      <td>I love this phone. The camera is amazing: its ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Saurabh Gothwad</td>\n",
       "      <td>5</td>\n",
       "      <td>Simply premium.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arunji Govindaraju</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome product very happy to hold this. Bette...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Ashwani Mishra</td>\n",
       "      <td>5</td>\n",
       "      <td>The iPhone 15 features a 48-megapixel main cam...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Dev Sarda</td>\n",
       "      <td>5</td>\n",
       "      <td>The best one from appleüíô</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Naresh Soni</td>\n",
       "      <td>5</td>\n",
       "      <td>Very good</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Sudipto Sarkar</td>\n",
       "      <td>5</td>\n",
       "      <td>What a phone super performance with light weig...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>Abdur Rahman</td>\n",
       "      <td>5</td>\n",
       "      <td>First time experiencing I phone. It feels prem...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows √ó 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Customer Name Rating  \\\n",
       "0               Ajin V      5   \n",
       "1    Flipkart Customer      5   \n",
       "2           Talim (Sk)      5   \n",
       "3      Saurabh Gothwad      5   \n",
       "4   Arunji Govindaraju      5   \n",
       "..                 ...    ...   \n",
       "95      Ashwani Mishra      5   \n",
       "96           Dev Sarda      5   \n",
       "97         Naresh Soni      5   \n",
       "98      Sudipto Sarkar      5   \n",
       "99       Abdur Rahman       5   \n",
       "\n",
       "                                               Review  \n",
       "0                                High quality cameraüòç  \n",
       "1   Awesome photography experience. Battery backup...  \n",
       "2   I love this phone. The camera is amazing: its ...  \n",
       "3                                     Simply premium.  \n",
       "4   Awesome product very happy to hold this. Bette...  \n",
       "..                                                ...  \n",
       "95  The iPhone 15 features a 48-megapixel main cam...  \n",
       "96                           The best one from appleüíô  \n",
       "97                                          Very good  \n",
       "98  What a phone super performance with light weig...  \n",
       "99  First time experiencing I phone. It feels prem...  \n",
       "\n",
       "[100 rows x 3 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Customer Name\"] = df[\"Customer Name\"].str.title()\n",
    "df[\"Review\"]= df[\"Review\"].str.replace(\"READ MORE\", \"\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "72a0f7da-efcb-4da1-92e7-3760f8051768",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt_tab to\n",
      "[nltk_data]     C:\\Users\\mahip\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package punkt_tab is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import nltk\n",
    "nltk.download('punkt_tab')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "cbe55959-e139-4ab9-8e6c-187eb8f77130",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Package                   Version\n",
      "------------------------- --------------\n",
      "anyio                     4.8.0\n",
      "argon2-cffi               23.1.0\n",
      "argon2-cffi-bindings      21.2.0\n",
      "arrow                     1.3.0\n",
      "asttokens                 3.0.0\n",
      "async-lru                 2.0.4\n",
      "attrs                     25.1.0\n",
      "babel                     2.17.0\n",
      "beautifulsoup4            4.13.3\n",
      "bleach                    6.2.0\n",
      "certifi                   2025.1.31\n",
      "cffi                      1.17.1\n",
      "charset-normalizer        3.4.1\n",
      "click                     8.1.8\n",
      "colorama                  0.4.6\n",
      "comm                      0.2.2\n",
      "contourpy                 1.3.1\n",
      "cycler                    0.12.1\n",
      "debugpy                   1.8.12\n",
      "decorator                 5.2.1\n",
      "defusedxml                0.7.1\n",
      "executing                 2.2.0\n",
      "fastjsonschema            2.21.1\n",
      "fonttools                 4.56.0\n",
      "fqdn                      1.5.1\n",
      "h11                       0.14.0\n",
      "httpcore                  1.0.7\n",
      "httpx                     0.28.1\n",
      "idna                      3.10\n",
      "ipykernel                 6.29.5\n",
      "ipython                   9.0.0\n",
      "ipython_pygments_lexers   1.1.1\n",
      "ipywidgets                8.1.5\n",
      "isoduration               20.11.0\n",
      "jedi                      0.19.2\n",
      "Jinja2                    3.1.5\n",
      "joblib                    1.4.2\n",
      "json5                     0.10.0\n",
      "jsonpointer               3.0.0\n",
      "jsonschema                4.23.0\n",
      "jsonschema-specifications 2024.10.1\n",
      "jupyter                   1.1.1\n",
      "jupyter_client            8.6.3\n",
      "jupyter-console           6.6.3\n",
      "jupyter_core              5.7.2\n",
      "jupyter-events            0.12.0\n",
      "jupyter-lsp               2.2.5\n",
      "jupyter_server            2.15.0\n",
      "jupyter_server_terminals  0.5.3\n",
      "jupyterlab                4.3.5\n",
      "jupyterlab_pygments       0.3.0\n",
      "jupyterlab_server         2.27.3\n",
      "jupyterlab_widgets        3.0.13\n",
      "kiwisolver                1.4.8\n",
      "MarkupSafe                3.0.2\n",
      "matplotlib                3.10.1\n",
      "matplotlib-inline         0.1.7\n",
      "mistune                   3.1.2\n",
      "nbclient                  0.10.2\n",
      "nbconvert                 7.16.6\n",
      "nbformat                  5.10.4\n",
      "nest-asyncio              1.6.0\n",
      "nltk                      3.9.1\n",
      "notebook                  7.3.2\n",
      "notebook_shim             0.2.4\n",
      "numpy                     2.2.4\n",
      "outcome                   1.3.0.post0\n",
      "overrides                 7.7.0\n",
      "packaging                 24.2\n",
      "pandas                    2.2.3\n",
      "pandocfilters             1.5.1\n",
      "parso                     0.8.4\n",
      "pillow                    11.1.0\n",
      "pip                       24.3.1\n",
      "platformdirs              4.3.6\n",
      "prometheus_client         0.21.1\n",
      "prompt_toolkit            3.0.50\n",
      "psutil                    7.0.0\n",
      "pure_eval                 0.2.3\n",
      "pycparser                 2.22\n",
      "Pygments                  2.19.1\n",
      "pyparsing                 3.2.3\n",
      "PySocks                   1.7.1\n",
      "python-dateutil           2.9.0.post0\n",
      "python-json-logger        3.2.1\n",
      "pytz                      2025.1\n",
      "pywin32                   308\n",
      "pywinpty                  2.0.15\n",
      "PyYAML                    6.0.2\n",
      "pyzmq                     26.2.1\n",
      "referencing               0.36.2\n",
      "regex                     2024.11.6\n",
      "requests                  2.32.3\n",
      "rfc3339-validator         0.1.4\n",
      "rfc3986-validator         0.1.1\n",
      "rpds-py                   0.23.1\n",
      "seaborn                   0.13.2\n",
      "selenium                  4.30.0\n",
      "Send2Trash                1.8.3\n",
      "setuptools                75.8.2\n",
      "six                       1.17.0\n",
      "sniffio                   1.3.1\n",
      "sortedcontainers          2.4.0\n",
      "soupsieve                 2.6\n",
      "stack-data                0.6.3\n",
      "terminado                 0.18.1\n",
      "textblob                  0.19.0\n",
      "tinycss2                  1.4.0\n",
      "tornado                   6.4.2\n",
      "tqdm                      4.67.1\n",
      "traitlets                 5.14.3\n",
      "trio                      0.29.0\n",
      "trio-websocket            0.12.2\n",
      "types-python-dateutil     2.9.0.20241206\n",
      "typing_extensions         4.12.2\n",
      "tzdata                    2025.1\n",
      "uri-template              1.3.0\n",
      "urllib3                   2.3.0\n",
      "wcwidth                   0.2.13\n",
      "webcolors                 24.11.1\n",
      "webencodings              0.5.1\n",
      "websocket-client          1.8.0\n",
      "widgetsnbextension        4.0.13\n",
      "wsproto                   1.2.0\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5c952e9f-aff2-4a6a-a5a3-3ddea257073e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Review</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ajin V</td>\n",
       "      <td>5</td>\n",
       "      <td>High quality cameraüòçREAD MORE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Flipkart Customer</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome photography experience. Battery backup...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Talim (sk)</td>\n",
       "      <td>5</td>\n",
       "      <td>I love this phone. The camera is amazing: its ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Saurabh Gothwad</td>\n",
       "      <td>5</td>\n",
       "      <td>Simply premium.READ MORE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arunji Govindaraju</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome product very happy to hold this. Bette...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Ashwani Mishra</td>\n",
       "      <td>5</td>\n",
       "      <td>The iPhone 15 features a 48-megapixel main cam...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Dev Sarda</td>\n",
       "      <td>5</td>\n",
       "      <td>The best one from appleüíôREAD MORE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Naresh Soni</td>\n",
       "      <td>5</td>\n",
       "      <td>Very goodREAD MORE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Sudipto Sarkar</td>\n",
       "      <td>5</td>\n",
       "      <td>What a phone super performance with light weig...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>ABDUR RAHMAN</td>\n",
       "      <td>5</td>\n",
       "      <td>First time experiencing I phone. It feels prem...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows √ó 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Customer Name Rating  \\\n",
       "0               Ajin V      5   \n",
       "1    Flipkart Customer      5   \n",
       "2           Talim (sk)      5   \n",
       "3      Saurabh Gothwad      5   \n",
       "4   Arunji Govindaraju      5   \n",
       "..                 ...    ...   \n",
       "95      Ashwani Mishra      5   \n",
       "96           Dev Sarda      5   \n",
       "97         Naresh Soni      5   \n",
       "98      Sudipto Sarkar      5   \n",
       "99       ABDUR RAHMAN       5   \n",
       "\n",
       "                                               Review  \n",
       "0                       High quality cameraüòçREAD MORE  \n",
       "1   Awesome photography experience. Battery backup...  \n",
       "2   I love this phone. The camera is amazing: its ...  \n",
       "3                            Simply premium.READ MORE  \n",
       "4   Awesome product very happy to hold this. Bette...  \n",
       "..                                                ...  \n",
       "95  The iPhone 15 features a 48-megapixel main cam...  \n",
       "96                  The best one from appleüíôREAD MORE  \n",
       "97                                 Very goodREAD MORE  \n",
       "98  What a phone super performance with light weig...  \n",
       "99  First time experiencing I phone. It feels prem...  \n",
       "\n",
       "[100 rows x 3 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cc59a91d-eb26-4022-b02e-9f70d3dc7128",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Review</th>\n",
       "      <th>Reviews_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ajin V</td>\n",
       "      <td>5</td>\n",
       "      <td>High quality cameraüòçREAD MORE</td>\n",
       "      <td>[High quality cameraüòçREAD MORE]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Flipkart Customer</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome photography experience. Battery backup...</td>\n",
       "      <td>[Awesome photography experience., Battery back...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Talim (sk)</td>\n",
       "      <td>5</td>\n",
       "      <td>I love this phone. The camera is amazing: its ...</td>\n",
       "      <td>[I love this phone., The camera is amazing: it...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Saurabh Gothwad</td>\n",
       "      <td>5</td>\n",
       "      <td>Simply premium.READ MORE</td>\n",
       "      <td>[Simply premium.READ MORE]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arunji Govindaraju</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome product very happy to hold this. Bette...</td>\n",
       "      <td>[Awesome product very happy to hold this., Bet...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Ashwani Mishra</td>\n",
       "      <td>5</td>\n",
       "      <td>The iPhone 15 features a 48-megapixel main cam...</td>\n",
       "      <td>[The iPhone 15 features a 48-megapixel main ca...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Dev Sarda</td>\n",
       "      <td>5</td>\n",
       "      <td>The best one from appleüíôREAD MORE</td>\n",
       "      <td>[The best one from appleüíôREAD MORE]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Naresh Soni</td>\n",
       "      <td>5</td>\n",
       "      <td>Very goodREAD MORE</td>\n",
       "      <td>[Very goodREAD MORE]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Sudipto Sarkar</td>\n",
       "      <td>5</td>\n",
       "      <td>What a phone super performance with light weig...</td>\n",
       "      <td>[What a phone super performance with light wei...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>ABDUR RAHMAN</td>\n",
       "      <td>5</td>\n",
       "      <td>First time experiencing I phone. It feels prem...</td>\n",
       "      <td>[First time experiencing I phone., It feels pr...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows √ó 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Customer Name Rating  \\\n",
       "0               Ajin V      5   \n",
       "1    Flipkart Customer      5   \n",
       "2           Talim (sk)      5   \n",
       "3      Saurabh Gothwad      5   \n",
       "4   Arunji Govindaraju      5   \n",
       "..                 ...    ...   \n",
       "95      Ashwani Mishra      5   \n",
       "96           Dev Sarda      5   \n",
       "97         Naresh Soni      5   \n",
       "98      Sudipto Sarkar      5   \n",
       "99       ABDUR RAHMAN       5   \n",
       "\n",
       "                                               Review  \\\n",
       "0                       High quality cameraüòçREAD MORE   \n",
       "1   Awesome photography experience. Battery backup...   \n",
       "2   I love this phone. The camera is amazing: its ...   \n",
       "3                            Simply premium.READ MORE   \n",
       "4   Awesome product very happy to hold this. Bette...   \n",
       "..                                                ...   \n",
       "95  The iPhone 15 features a 48-megapixel main cam...   \n",
       "96                  The best one from appleüíôREAD MORE   \n",
       "97                                 Very goodREAD MORE   \n",
       "98  What a phone super performance with light weig...   \n",
       "99  First time experiencing I phone. It feels prem...   \n",
       "\n",
       "                                            Reviews_1  \n",
       "0                     [High quality cameraüòçREAD MORE]  \n",
       "1   [Awesome photography experience., Battery back...  \n",
       "2   [I love this phone., The camera is amazing: it...  \n",
       "3                          [Simply premium.READ MORE]  \n",
       "4   [Awesome product very happy to hold this., Bet...  \n",
       "..                                                ...  \n",
       "95  [The iPhone 15 features a 48-megapixel main ca...  \n",
       "96                [The best one from appleüíôREAD MORE]  \n",
       "97                               [Very goodREAD MORE]  \n",
       "98  [What a phone super performance with light wei...  \n",
       "99  [First time experiencing I phone., It feels pr...  \n",
       "\n",
       "[100 rows x 4 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Reviews_1'] = df[\"Review\"].apply(sent_tokenize)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9d49a500-7ba2-480d-86fe-88b751b09b6c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Review</th>\n",
       "      <th>Reviews_1</th>\n",
       "      <th>polarity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ajin V</td>\n",
       "      <td>5</td>\n",
       "      <td>High quality cameraüòçREAD MORE</td>\n",
       "      <td>[High quality cameraüòçREAD MORE]</td>\n",
       "      <td>[0.33]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Flipkart Customer</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome photography experience. Battery backup...</td>\n",
       "      <td>[Awesome photography experience., Battery back...</td>\n",
       "      <td>[1.0, 0.7, 0.5]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Talim (sk)</td>\n",
       "      <td>5</td>\n",
       "      <td>I love this phone. The camera is amazing: its ...</td>\n",
       "      <td>[I love this phone., The camera is amazing: it...</td>\n",
       "      <td>[0.5, 0.55]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Saurabh Gothwad</td>\n",
       "      <td>5</td>\n",
       "      <td>Simply premium.READ MORE</td>\n",
       "      <td>[Simply premium.READ MORE]</td>\n",
       "      <td>[0.25]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arunji Govindaraju</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome product very happy to hold this. Bette...</td>\n",
       "      <td>[Awesome product very happy to hold this., Bet...</td>\n",
       "      <td>[1.0, 0.5, 0.46190476190476193]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Ashwani Mishra</td>\n",
       "      <td>5</td>\n",
       "      <td>The iPhone 15 features a 48-megapixel main cam...</td>\n",
       "      <td>[The iPhone 15 features a 48-megapixel main ca...</td>\n",
       "      <td>[0.2222222222222222]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Dev Sarda</td>\n",
       "      <td>5</td>\n",
       "      <td>The best one from appleüíôREAD MORE</td>\n",
       "      <td>[The best one from appleüíôREAD MORE]</td>\n",
       "      <td>[0.75]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Naresh Soni</td>\n",
       "      <td>5</td>\n",
       "      <td>Very goodREAD MORE</td>\n",
       "      <td>[Very goodREAD MORE]</td>\n",
       "      <td>[0.35]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Sudipto Sarkar</td>\n",
       "      <td>5</td>\n",
       "      <td>What a phone super performance with light weig...</td>\n",
       "      <td>[What a phone super performance with light wei...</td>\n",
       "      <td>[0.3666666666666667, 0.0, 0.0, 0.2666666666666...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>ABDUR RAHMAN</td>\n",
       "      <td>5</td>\n",
       "      <td>First time experiencing I phone. It feels prem...</td>\n",
       "      <td>[First time experiencing I phone., It feels pr...</td>\n",
       "      <td>[0.25, 0.6666666666666666]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows √ó 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Customer Name Rating  \\\n",
       "0               Ajin V      5   \n",
       "1    Flipkart Customer      5   \n",
       "2           Talim (sk)      5   \n",
       "3      Saurabh Gothwad      5   \n",
       "4   Arunji Govindaraju      5   \n",
       "..                 ...    ...   \n",
       "95      Ashwani Mishra      5   \n",
       "96           Dev Sarda      5   \n",
       "97         Naresh Soni      5   \n",
       "98      Sudipto Sarkar      5   \n",
       "99       ABDUR RAHMAN       5   \n",
       "\n",
       "                                               Review  \\\n",
       "0                       High quality cameraüòçREAD MORE   \n",
       "1   Awesome photography experience. Battery backup...   \n",
       "2   I love this phone. The camera is amazing: its ...   \n",
       "3                            Simply premium.READ MORE   \n",
       "4   Awesome product very happy to hold this. Bette...   \n",
       "..                                                ...   \n",
       "95  The iPhone 15 features a 48-megapixel main cam...   \n",
       "96                  The best one from appleüíôREAD MORE   \n",
       "97                                 Very goodREAD MORE   \n",
       "98  What a phone super performance with light weig...   \n",
       "99  First time experiencing I phone. It feels prem...   \n",
       "\n",
       "                                            Reviews_1  \\\n",
       "0                     [High quality cameraüòçREAD MORE]   \n",
       "1   [Awesome photography experience., Battery back...   \n",
       "2   [I love this phone., The camera is amazing: it...   \n",
       "3                          [Simply premium.READ MORE]   \n",
       "4   [Awesome product very happy to hold this., Bet...   \n",
       "..                                                ...   \n",
       "95  [The iPhone 15 features a 48-megapixel main ca...   \n",
       "96                [The best one from appleüíôREAD MORE]   \n",
       "97                               [Very goodREAD MORE]   \n",
       "98  [What a phone super performance with light wei...   \n",
       "99  [First time experiencing I phone., It feels pr...   \n",
       "\n",
       "                                             polarity  \n",
       "0                                              [0.33]  \n",
       "1                                     [1.0, 0.7, 0.5]  \n",
       "2                                         [0.5, 0.55]  \n",
       "3                                              [0.25]  \n",
       "4                     [1.0, 0.5, 0.46190476190476193]  \n",
       "..                                                ...  \n",
       "95                               [0.2222222222222222]  \n",
       "96                                             [0.75]  \n",
       "97                                             [0.35]  \n",
       "98  [0.3666666666666667, 0.0, 0.0, 0.2666666666666...  \n",
       "99                         [0.25, 0.6666666666666666]  \n",
       "\n",
       "[100 rows x 5 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from textblob import blob\n",
    "def get_polarity(sentences):\n",
    "    return [TextBlob(sentence).sentiment.polarity for sentence in sentences]\n",
    "\n",
    "df[\"polarity\"] = df[\"Reviews_1\"].apply(get_polarity)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "504a0bf8-c769-4185-b55f-84da90b81654",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Review</th>\n",
       "      <th>Reviews_1</th>\n",
       "      <th>polarity</th>\n",
       "      <th>Average_polarity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ajin V</td>\n",
       "      <td>5</td>\n",
       "      <td>High quality cameraüòçREAD MORE</td>\n",
       "      <td>[High quality cameraüòçREAD MORE]</td>\n",
       "      <td>[0.33]</td>\n",
       "      <td>0.330000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Flipkart Customer</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome photography experience. Battery backup...</td>\n",
       "      <td>[Awesome photography experience., Battery back...</td>\n",
       "      <td>[1.0, 0.7, 0.5]</td>\n",
       "      <td>0.733333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Talim (sk)</td>\n",
       "      <td>5</td>\n",
       "      <td>I love this phone. The camera is amazing: its ...</td>\n",
       "      <td>[I love this phone., The camera is amazing: it...</td>\n",
       "      <td>[0.5, 0.55]</td>\n",
       "      <td>0.525000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Saurabh Gothwad</td>\n",
       "      <td>5</td>\n",
       "      <td>Simply premium.READ MORE</td>\n",
       "      <td>[Simply premium.READ MORE]</td>\n",
       "      <td>[0.25]</td>\n",
       "      <td>0.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arunji Govindaraju</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome product very happy to hold this. Bette...</td>\n",
       "      <td>[Awesome product very happy to hold this., Bet...</td>\n",
       "      <td>[1.0, 0.5, 0.46190476190476193]</td>\n",
       "      <td>0.653968</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>mohit  yadav</td>\n",
       "      <td>5</td>\n",
       "      <td>Nice ‚ù§Ô∏èREAD MORE</td>\n",
       "      <td>[Nice ‚ù§Ô∏èREAD MORE]</td>\n",
       "      <td>[0.55]</td>\n",
       "      <td>0.550000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Afzol  Hussain</td>\n",
       "      <td>5</td>\n",
       "      <td>Thanks Flipkart I m glad such a beautiful iPho...</td>\n",
       "      <td>[Thanks Flipkart I m glad such a beautiful iPh...</td>\n",
       "      <td>[0.41]</td>\n",
       "      <td>0.410000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>VinodKUMAR VinodKUMAR</td>\n",
       "      <td>4</td>\n",
       "      <td>Nice phone goodREAD MORE</td>\n",
       "      <td>[Nice phone goodREAD MORE]</td>\n",
       "      <td>[0.55]</td>\n",
       "      <td>0.550000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Jayanta  Roy</td>\n",
       "      <td>5</td>\n",
       "      <td>Nice üôÇüôÇüôÇüôÇüôÇREAD MORE</td>\n",
       "      <td>[Nice üôÇüôÇüôÇüôÇüôÇREAD MORE]</td>\n",
       "      <td>[0.55]</td>\n",
       "      <td>0.550000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Sajib Das</td>\n",
       "      <td>5</td>\n",
       "      <td>moving from android to apple is a surreal expe...</td>\n",
       "      <td>[moving from android to apple is a surreal exp...</td>\n",
       "      <td>[0.25, 0.5]</td>\n",
       "      <td>0.375000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Customer Name Rating  \\\n",
       "0                 Ajin V      5   \n",
       "1      Flipkart Customer      5   \n",
       "2             Talim (sk)      5   \n",
       "3        Saurabh Gothwad      5   \n",
       "4     Arunji Govindaraju      5   \n",
       "5          mohit  yadav       5   \n",
       "6         Afzol  Hussain      5   \n",
       "7  VinodKUMAR VinodKUMAR      4   \n",
       "8           Jayanta  Roy      5   \n",
       "9              Sajib Das      5   \n",
       "\n",
       "                                              Review  \\\n",
       "0                      High quality cameraüòçREAD MORE   \n",
       "1  Awesome photography experience. Battery backup...   \n",
       "2  I love this phone. The camera is amazing: its ...   \n",
       "3                           Simply premium.READ MORE   \n",
       "4  Awesome product very happy to hold this. Bette...   \n",
       "5                                   Nice ‚ù§Ô∏èREAD MORE   \n",
       "6  Thanks Flipkart I m glad such a beautiful iPho...   \n",
       "7                           Nice phone goodREAD MORE   \n",
       "8                                Nice üôÇüôÇüôÇüôÇüôÇREAD MORE   \n",
       "9  moving from android to apple is a surreal expe...   \n",
       "\n",
       "                                           Reviews_1  \\\n",
       "0                    [High quality cameraüòçREAD MORE]   \n",
       "1  [Awesome photography experience., Battery back...   \n",
       "2  [I love this phone., The camera is amazing: it...   \n",
       "3                         [Simply premium.READ MORE]   \n",
       "4  [Awesome product very happy to hold this., Bet...   \n",
       "5                                 [Nice ‚ù§Ô∏èREAD MORE]   \n",
       "6  [Thanks Flipkart I m glad such a beautiful iPh...   \n",
       "7                         [Nice phone goodREAD MORE]   \n",
       "8                              [Nice üôÇüôÇüôÇüôÇüôÇREAD MORE]   \n",
       "9  [moving from android to apple is a surreal exp...   \n",
       "\n",
       "                          polarity  Average_polarity  \n",
       "0                           [0.33]          0.330000  \n",
       "1                  [1.0, 0.7, 0.5]          0.733333  \n",
       "2                      [0.5, 0.55]          0.525000  \n",
       "3                           [0.25]          0.250000  \n",
       "4  [1.0, 0.5, 0.46190476190476193]          0.653968  \n",
       "5                           [0.55]          0.550000  \n",
       "6                           [0.41]          0.410000  \n",
       "7                           [0.55]          0.550000  \n",
       "8                           [0.55]          0.550000  \n",
       "9                      [0.25, 0.5]          0.375000  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from statistics import mean\n",
    "def calculate_average_polarity(polarities):\n",
    "    return mean(polarities) if polarities else 0\n",
    "\n",
    "df['Average_polarity'] = df[\"polarity\"].apply(calculate_average_polarity)\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "94654572-d368-460a-ad73-90acd2014d99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Name</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Review</th>\n",
       "      <th>Reviews_1</th>\n",
       "      <th>polarity</th>\n",
       "      <th>Average_polarity</th>\n",
       "      <th>Sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ajin V</td>\n",
       "      <td>5</td>\n",
       "      <td>High quality cameraüòçREAD MORE</td>\n",
       "      <td>[High quality cameraüòçREAD MORE]</td>\n",
       "      <td>[0.33]</td>\n",
       "      <td>0.330000</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Flipkart Customer</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome photography experience. Battery backup...</td>\n",
       "      <td>[Awesome photography experience., Battery back...</td>\n",
       "      <td>[1.0, 0.7, 0.5]</td>\n",
       "      <td>0.733333</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Talim (sk)</td>\n",
       "      <td>5</td>\n",
       "      <td>I love this phone. The camera is amazing: its ...</td>\n",
       "      <td>[I love this phone., The camera is amazing: it...</td>\n",
       "      <td>[0.5, 0.55]</td>\n",
       "      <td>0.525000</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Saurabh Gothwad</td>\n",
       "      <td>5</td>\n",
       "      <td>Simply premium.READ MORE</td>\n",
       "      <td>[Simply premium.READ MORE]</td>\n",
       "      <td>[0.25]</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arunji Govindaraju</td>\n",
       "      <td>5</td>\n",
       "      <td>Awesome product very happy to hold this. Bette...</td>\n",
       "      <td>[Awesome product very happy to hold this., Bet...</td>\n",
       "      <td>[1.0, 0.5, 0.46190476190476193]</td>\n",
       "      <td>0.653968</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Ashwani Mishra</td>\n",
       "      <td>5</td>\n",
       "      <td>The iPhone 15 features a 48-megapixel main cam...</td>\n",
       "      <td>[The iPhone 15 features a 48-megapixel main ca...</td>\n",
       "      <td>[0.2222222222222222]</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Dev Sarda</td>\n",
       "      <td>5</td>\n",
       "      <td>The best one from appleüíôREAD MORE</td>\n",
       "      <td>[The best one from appleüíôREAD MORE]</td>\n",
       "      <td>[0.75]</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>Extremely positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Naresh Soni</td>\n",
       "      <td>5</td>\n",
       "      <td>Very goodREAD MORE</td>\n",
       "      <td>[Very goodREAD MORE]</td>\n",
       "      <td>[0.35]</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>Sudipto Sarkar</td>\n",
       "      <td>5</td>\n",
       "      <td>What a phone super performance with light weig...</td>\n",
       "      <td>[What a phone super performance with light wei...</td>\n",
       "      <td>[0.3666666666666667, 0.0, 0.0, 0.2666666666666...</td>\n",
       "      <td>0.126068</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>ABDUR RAHMAN</td>\n",
       "      <td>5</td>\n",
       "      <td>First time experiencing I phone. It feels prem...</td>\n",
       "      <td>[First time experiencing I phone., It feels pr...</td>\n",
       "      <td>[0.25, 0.6666666666666666]</td>\n",
       "      <td>0.458333</td>\n",
       "      <td>Positive</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows √ó 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Customer Name Rating  \\\n",
       "0               Ajin V      5   \n",
       "1    Flipkart Customer      5   \n",
       "2           Talim (sk)      5   \n",
       "3      Saurabh Gothwad      5   \n",
       "4   Arunji Govindaraju      5   \n",
       "..                 ...    ...   \n",
       "95      Ashwani Mishra      5   \n",
       "96           Dev Sarda      5   \n",
       "97         Naresh Soni      5   \n",
       "98      Sudipto Sarkar      5   \n",
       "99       ABDUR RAHMAN       5   \n",
       "\n",
       "                                               Review  \\\n",
       "0                       High quality cameraüòçREAD MORE   \n",
       "1   Awesome photography experience. Battery backup...   \n",
       "2   I love this phone. The camera is amazing: its ...   \n",
       "3                            Simply premium.READ MORE   \n",
       "4   Awesome product very happy to hold this. Bette...   \n",
       "..                                                ...   \n",
       "95  The iPhone 15 features a 48-megapixel main cam...   \n",
       "96                  The best one from appleüíôREAD MORE   \n",
       "97                                 Very goodREAD MORE   \n",
       "98  What a phone super performance with light weig...   \n",
       "99  First time experiencing I phone. It feels prem...   \n",
       "\n",
       "                                            Reviews_1  \\\n",
       "0                     [High quality cameraüòçREAD MORE]   \n",
       "1   [Awesome photography experience., Battery back...   \n",
       "2   [I love this phone., The camera is amazing: it...   \n",
       "3                          [Simply premium.READ MORE]   \n",
       "4   [Awesome product very happy to hold this., Bet...   \n",
       "..                                                ...   \n",
       "95  [The iPhone 15 features a 48-megapixel main ca...   \n",
       "96                [The best one from appleüíôREAD MORE]   \n",
       "97                               [Very goodREAD MORE]   \n",
       "98  [What a phone super performance with light wei...   \n",
       "99  [First time experiencing I phone., It feels pr...   \n",
       "\n",
       "                                             polarity  Average_polarity  \\\n",
       "0                                              [0.33]          0.330000   \n",
       "1                                     [1.0, 0.7, 0.5]          0.733333   \n",
       "2                                         [0.5, 0.55]          0.525000   \n",
       "3                                              [0.25]          0.250000   \n",
       "4                     [1.0, 0.5, 0.46190476190476193]          0.653968   \n",
       "..                                                ...               ...   \n",
       "95                               [0.2222222222222222]          0.222222   \n",
       "96                                             [0.75]          0.750000   \n",
       "97                                             [0.35]          0.350000   \n",
       "98  [0.3666666666666667, 0.0, 0.0, 0.2666666666666...          0.126068   \n",
       "99                         [0.25, 0.6666666666666666]          0.458333   \n",
       "\n",
       "             Sentiment  \n",
       "0             Positive  \n",
       "1             Positive  \n",
       "2             Positive  \n",
       "3             Positive  \n",
       "4             Positive  \n",
       "..                 ...  \n",
       "95            Positive  \n",
       "96  Extremely positive  \n",
       "97            Positive  \n",
       "98            Positive  \n",
       "99            Positive  \n",
       "\n",
       "[100 rows x 7 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def sentiment(pol):\n",
    "    if pol>=0.75:\n",
    "     return \"Extremely positive\"\n",
    "    elif pol>=0:\n",
    "        return \"Positive\"\n",
    "    elif pol ==0:\n",
    "        return \"Neutral\"\n",
    "    elif pol <= -0.75:\n",
    "        return \"Negative\"\n",
    "    else:\n",
    "        return \"Extremply negative\"\n",
    "\n",
    "df[\"Sentiment\"] = df[\"Average_polarity\"].apply(sentiment)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b4649eb0-db24-49d8-a17b-0cce8d3c5720",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "np.float64(0.45813840048840043)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Average_polarity'].mean()\n",
    "# The reviews are positive overall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "d42e8872-3d74-4b97-bb41-ce6f7bb2ddbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x = df['Sentiment'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8348664d-5bad-42a6-b958-926a823a799c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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nZYtW/ose/LJJ52aNWuavxUqVHB++uknZ9euXU6TJk2c++67z7ly5Yq5XfPmzZ3HH3/c+eWXX5yDBw86y5Ytc9auXWvWrV69Wt+9ztmzZ52YmBhnwoQJTo4cOZzjx4+b6fz58+Z2xYsXd8aPH2/+v3z5cicoKMi7Tuk2dVlUVJSZHz16tFO+fHlnxYoV5jFnz57tZM6c2VmzZk2KvWaped/fKCwszOyjyMhIZ8eOHU6mTJmcpUuXmnW6LDQ01OnWrZt3v167ds2776tWreqsXLnSOXDggPPvv//ecd957lenTh1n/fr15vH0eHvkkUecxo0bm3k9FvPmzeu89dZb3jImdLt6LCot7xNPPOHzPPVY79Chwy1fBy1DtmzZnFdeecX5448/nPnz5ztZsmRxZsyY4bMN3i9p9zhMyDESd//9/PPPTvr06Z1jx45513/11VdO1qxZffZpXFrWjBkzOo0aNXK2bt3qbN++3Rxzzz//vPc2+riFCxd2vvzyS+fPP/80f/PkyePMmTPHrD937pyZb9++vfO///3P+fbbb52yZcua57xz505zGz1mhw8fbh5Dt+F5Lp999plZr+Vr06aN07RpU+9rrsftoUOHfLbz6quvOvXq1fN5DgMHDvRZps+lRYsW5rH27dtn1utrq/squRFkUom4HyKxsbHOqlWrzJu6VatW5oDUN5vH6dOnzYfk559/buarVKnivPHGG/Fu98YvD30D5syZ86bbxX1jX7161cmXL58zb9487/rnnnvOefbZZ83/L1++bN5MGzZs8NlG165dze1w9/teP0j1gzPuNGbMGO9t9MOpevXq5kOrYsWK5ssiLv3w1g/u+Pb9kiVLvMsSsu889/vhhx+868PDw80y/cLx6N69uwkJd7tdz7G4efNmny+QkydPOhkyZLjtl7s+T/3C0PeIx+DBg80ypR/AvF/S7nGYkGPkxv2n9LmMHTvWO69f6J06dbrla6XHhZZDQ5nH5MmTnYIFC3rnS5cu7SxcuNDnfqNGjTJhT02dOtUEhUuXLnnXz5w50yeAxKdXr15O69atbxtAbwwy+jcgIMA5fPiwmb9+/bpTpEgRUwa1bt06E9h1v8Slz2H69OlOcqORMRVZvny5qaLUak2tDtQq06efftosr127tvd2efPmNVWMv//+u5nv27evaYpauXKlaY5q3bq1VK1a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u3btmvfx9YJ6AwcONBe5y5Ili/Pggw+abXt4trtixQqnfPnyTtasWc1FCY8dO+Yt/43li3t/ACmDpiUAdy1btmxmWrJkicTExMR7Gz1d+qlTp+S7776T7du3S82aNeWxxx6TM2fOeG9z8OBBs43ly5ebae3atebaSer999+X0NBQ6datm2lK0ikkJOSW112aOHGifPrpp7JixQrTj+app56Sb7/91kx6Ycnp06fLokWLvPfp3bu3bNy40dznl19+MeVt2rSp7N+/32e77777rrn/Tz/9ZE5H/+qrr5p1+leva6P38ZRPm70ApLAUCkwAUplFixY5uXPndgIDA526des6Q4cOdXbv3m3WrVu3ztSwaK1HXKVLl3amT5/urdHQmhBPDYwKCwtzateu7Z1/5JFHnFdeecVnG/HVyOj8gQMHvLfp3r272fb58+e9y7Q2RZerw4cPO+nTp3f+/vtvn20/9thj5nncaruTJ092ChYs6J3XWqOWLVsm8hUEkBToIwMg0X1kmjdvLuvWrZNNmzaZmhe9kOOHH34o0dHRcuHCBcmbN6/PfS5dumRqYTxKlCgh2bNn984XLlzY1OLcrSxZskjp0qW983oRP9221hrFXebZ9q+//irXr1+XsmXL+mxHa5filvnG7Sa2fACSD0EGQKIFBgbK448/bqZhw4bJiy++KCNGjJCePXuaL31t4rlRrly5vP/PmDGjzzodVh0bG3vX5YhvO7fbtoas9OnTmyYv/RtX3PAT3za4zi7gXwgyAJJMxYoVTZ8X7Q9z4sQJyZAhg6kZuZcRSlpzktRq1Khhtqu1Kw8//LDflQ9AwtHZF8Bd0yHWDRs2lPnz55uOsocOHZIvvvjCNC21bNlSGjVqZDrq6jlWVq5cKX/99Zds2LBBXnvtNdm2bVuCH0dD0ObNm839T58+najamvhok1K7du2kQ4cO8tVXX5nyb9myRcLDw+Wbb765q/Lp89+7d68p39WrV5OkfAASjiAD4K5p80vt2rVl/PjxUr9+falcubJpWtIRRh988IFpgtHRQrquc+fOJji0bdtWDh8+bPqqJJSODNKmH63pyZ8/vxk1lFRmz55tgszAgQOlXLlyJnRt3brVnOAvofT56n3vv/9+U76kPBkggIQJ0B6/CbwtAACAX6FGBgAAWIsgAwAArEWQAQAA1iLIAAAAaxFkAACAtQgyAADAWgQZAABgLYIMAACwFkEGAABYiyADAACsRZABAABiq/8HxIUy75nPnaMAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.countplot(x= df['Sentiment'])\n",
    "ax.bar_label(ax.containers[0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9faa7e22-b050-4937-acbf-a456bf242f33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation between rating and sentiment polarity: 0.3772491656596218\n"
     ]
    }
   ],
   "source": [
    "from textblob import TextBlob\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "# Convert ratings to numeric (if not already)\n",
    "#df['Rating'] = pd.to_numeric(df['Rating'], errors='coerce')\n",
    "\n",
    "# Calculate sentiment polarity\n",
    "#df['Polarity'] = df['Review'].apply(lambda x: TextBlob(x).sentiment.polarity)\n",
    "\n",
    "# Plotting the correlation\n",
    "plt.figure(figsize=(8, 5))\n",
    "sns.scatterplot(x=df['Rating'], y=df['Polarity'], hue=df['Sentiment'])\n",
    "plt.title(\"Rating vs Sentiment Polarity\")\n",
    "plt.xlabel(\"Rating (1-5 stars)\")\n",
    "plt.ylabel(\"Sentiment Polarity\")\n",
    "plt.show()\n",
    "\n",
    "# Display correlation\n",
    "correlation = df['Rating'].corr(df['Polarity'])\n",
    "print(f\"Correlation between rating and sentiment polarity: {correlation}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "702f80d3-18e0-4bb6-be3f-ec5e07bab05e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
